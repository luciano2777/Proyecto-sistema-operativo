/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Classes.MemoryEntity;
import Classes.Simulator;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SpinnerNumberModel;
import javax.swing.Timer;

/**
 *
 * @author Juan
 */
public class CreateProcessView extends javax.swing.JPanel {    
    private Simulator simulator;
    private SimulationView simView;
    /**
     * Creates new form CreateProcessView
     */
    public CreateProcessView(Simulator simulator, SimulationView simView) {
        initComponents();
        this.simulator = simulator;
        this.simView = simView;
        buttonGroup.add(cpuBoundRButton);
        buttonGroup.add(IOBoundRButton);
        cpuBoundRButton.setSelected(true);
        createdMessage.setText("");
    }
    
    public void saveProcess(String name, Integer numInstructions, boolean isIObound,
        Integer ticksToException, Integer ticksToSuccess, Integer memoryAdress){
        String filePath = "src" + File.separator + "Config" + File.separator + "process.txt";
        FileWriter fw = null;
        
        try {
            fw = new FileWriter(new File(filePath), true);
            BufferedWriter bw = new BufferedWriter(fw);
                        
            if(isIObound){
                bw.write("IObound-"+name+"-"+numInstructions+"-"+memoryAdress+"-"+ticksToException+"-"+ticksToSuccess);                 
            }
            else{
                bw.write("CPUbound-"+name+"-"+numInstructions+"-"+memoryAdress);                 
            }
            bw.newLine();
            bw.close(); 
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(SettingsView.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(SettingsView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            createdMessage.setText("Cambios guardados exitosamente!");
            Timer timer = new Timer(3000, (ActionEvent e) -> {
                createdMessage.setText("");
            });
            
            timer.setRepeats(false);
            timer.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        CreateProcessLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        numInstructionsInput = new javax.swing.JTextField();
        cpuBoundRButton = new javax.swing.JRadioButton();
        IOBoundRButton = new javax.swing.JRadioButton();
        IOSatisfyLabel = new javax.swing.JLabel();
        IORequestLabel = new javax.swing.JLabel();
        CreateButton = new javax.swing.JButton();
        ticksToRequestIOminus = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ticksToRequestIOplus = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ticksToExceptionLabel = new javax.swing.JLabel();
        ticksToSuccesLabel = new javax.swing.JLabel();
        ticksToSatisfyIOplus = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        ticksToSatisfyIOminus = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        createdMessage = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(239, 239, 239));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CreateProcessLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        CreateProcessLabel.setText("Crear Proceso");
        jPanel1.add(CreateProcessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        nameInput.setBackground(new java.awt.Color(239, 239, 239));
        nameInput.setForeground(new java.awt.Color(102, 102, 102));
        nameInput.setText("Nombre");
        nameInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        nameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameInputFocusLost(evt);
            }
        });
        jPanel1.add(nameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 200, -1));

        numInstructionsInput.setBackground(new java.awt.Color(239, 239, 239));
        numInstructionsInput.setForeground(new java.awt.Color(102, 102, 102));
        numInstructionsInput.setText("Cantidad de instrucciones");
        numInstructionsInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        numInstructionsInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numInstructionsInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numInstructionsInputFocusLost(evt);
            }
        });
        jPanel1.add(numInstructionsInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 200, -1));

        cpuBoundRButton.setText("CPU Bound");
        cpuBoundRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpuBoundRButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cpuBoundRButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, -1, -1));

        IOBoundRButton.setText("I/O Bound");
        IOBoundRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IOBoundRButtonActionPerformed(evt);
            }
        });
        jPanel1.add(IOBoundRButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, -1, -1));

        IOSatisfyLabel.setForeground(new java.awt.Color(153, 153, 153));
        IOSatisfyLabel.setText("Numero de ciclos para satisfacer operacion de I/O:");
        jPanel1.add(IOSatisfyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, 20));

        IORequestLabel.setForeground(new java.awt.Color(153, 153, 153));
        IORequestLabel.setText("Numero de ciclos para generar solicitud de I/O:");
        jPanel1.add(IORequestLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 250, 20));

        CreateButton.setBackground(new java.awt.Color(250, 250, 250));
        CreateButton.setText("Crear!");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CreateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, -1));

        ticksToRequestIOminus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToRequestIOminus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToRequestIOminusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ticksToRequestIOminusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ticksToRequestIOminusMouseExited(evt);
            }
        });
        ticksToRequestIOminus.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("-");
        ticksToRequestIOminus.add(jLabel5, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToRequestIOminus, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 250, 20, 20));

        ticksToRequestIOplus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToRequestIOplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToRequestIOplusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ticksToRequestIOplusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ticksToRequestIOplusMouseExited(evt);
            }
        });
        ticksToRequestIOplus.setLayout(new java.awt.GridBagLayout());

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("+");
        ticksToRequestIOplus.add(jLabel4, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToRequestIOplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 20, 20));

        ticksToExceptionLabel.setText("1");
        jPanel1.add(ticksToExceptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 20, 20));

        ticksToSuccesLabel.setText("1");
        jPanel1.add(ticksToSuccesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 20, -1));

        ticksToSatisfyIOplus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToSatisfyIOplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOplusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOplusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOplusMouseExited(evt);
            }
        });
        ticksToSatisfyIOplus.setLayout(new java.awt.GridBagLayout());

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("+");
        ticksToSatisfyIOplus.add(jLabel7, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToSatisfyIOplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 20, 20));

        ticksToSatisfyIOminus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToSatisfyIOminus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOminusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOminusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOminusMouseExited(evt);
            }
        });
        ticksToSatisfyIOminus.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("-");
        ticksToSatisfyIOminus.add(jLabel6, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToSatisfyIOminus, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, 20, 20));

        createdMessage.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createdMessage.setForeground(new java.awt.Color(0, 204, 51));
        createdMessage.setText("Proceso creado exitosamente!");
        jPanel1.add(createdMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void IOBoundRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IOBoundRButtonActionPerformed
        if(IOBoundRButton.isSelected()){
            IORequestLabel.setForeground(Color.black);            
            IOSatisfyLabel.setForeground(Color.black);            
        }
    }//GEN-LAST:event_IOBoundRButtonActionPerformed

    private void cpuBoundRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpuBoundRButtonActionPerformed
        if(cpuBoundRButton.isSelected()){
            IORequestLabel.setForeground(new Color(153, 153, 153));            
            IOSatisfyLabel.setForeground(new Color(153, 153, 153));            
        }
    }//GEN-LAST:event_cpuBoundRButtonActionPerformed

    private void nameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameInputFocusGained
        if(nameInput.getText().equals("Nombre")){
            nameInput.setText("");
            nameInput.setForeground(Color.black);            
        }
    }//GEN-LAST:event_nameInputFocusGained

    private void nameInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameInputFocusLost
        if(nameInput.getText().isBlank()){            
            nameInput.setText("Nombre");
            nameInput.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_nameInputFocusLost

    private void numInstructionsInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numInstructionsInputFocusGained
        if(numInstructionsInput.getText().equals("Cantidad de instrucciones")){
            numInstructionsInput.setText("");
            numInstructionsInput.setForeground(Color.black);            
        }
    }//GEN-LAST:event_numInstructionsInputFocusGained

    private void numInstructionsInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numInstructionsInputFocusLost
        if(numInstructionsInput.getText().isBlank()){            
            numInstructionsInput.setText("Cantidad de instrucciones");
            numInstructionsInput.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_numInstructionsInputFocusLost

    private void ticksToRequestIOplusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOplusMouseClicked
        if((ticksToExceptionLabel.getText().length() + 1) < 4){
            ticksToExceptionLabel.setText(Integer.toString(Integer.parseInt(ticksToExceptionLabel.getText()) + 1));
        }
    }//GEN-LAST:event_ticksToRequestIOplusMouseClicked

    private void ticksToRequestIOminusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOminusMouseClicked
        if(Integer.parseInt(ticksToExceptionLabel.getText()) > 1){
            ticksToExceptionLabel.setText(Integer.toString(Integer.parseInt(ticksToExceptionLabel.getText()) - 1));
        }
    }//GEN-LAST:event_ticksToRequestIOminusMouseClicked

    private void ticksToSatisfyIOminusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOminusMouseClicked
        if(Integer.parseInt(ticksToSuccesLabel.getText()) > 1){
            ticksToSuccesLabel.setText(Integer.toString(Integer.parseInt(ticksToSuccesLabel.getText()) - 1));
        }
    }//GEN-LAST:event_ticksToSatisfyIOminusMouseClicked

    private void ticksToSatisfyIOplusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOplusMouseClicked
        if((ticksToSuccesLabel.getText().length() + 1) < 4){
            ticksToSuccesLabel.setText(Integer.toString(Integer.parseInt(ticksToSuccesLabel.getText()) + 1));
        }
    }//GEN-LAST:event_ticksToSatisfyIOplusMouseClicked

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        String name = nameInput.getText();
        Integer numInstructions = Integer.valueOf(numInstructionsInput.getText());
        boolean isIObound = IOBoundRButton.isSelected();
        Integer ticksToException = Integer.valueOf(ticksToExceptionLabel.getText());
        Integer ticksToSuccess = Integer.valueOf(ticksToSuccesLabel.getText());
        Integer memoryAdress = null; 
        
        MemoryEntity[] mainMemory = this.simulator.getMainMemory();
        for (int i = 1; i < mainMemory.length; i++) {            
            if(mainMemory[i] == null){
                memoryAdress = i;
                break;
            }
        }
        
        
        if(isIObound){
            simulator.createProcessIObound(name, numInstructions, memoryAdress, ticksToException, ticksToSuccess);
        }
        else{
            simulator.createProcessCPUbound(name, numInstructions, memoryAdress);
        }
        
        saveProcess(name, numInstructions, isIObound, ticksToException, ticksToSuccess, memoryAdress);
        this.simView.drawReadyQueue();
        
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void ticksToRequestIOplusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOplusMouseEntered
        ticksToRequestIOplus.setBackground(new Color(204, 204, 204));       
    }//GEN-LAST:event_ticksToRequestIOplusMouseEntered

    private void ticksToRequestIOplusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOplusMouseExited
        ticksToRequestIOplus.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_ticksToRequestIOplusMouseExited

    private void ticksToRequestIOminusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOminusMouseEntered
        ticksToRequestIOminus.setBackground(new Color(204, 204, 204));       
    }//GEN-LAST:event_ticksToRequestIOminusMouseEntered

    private void ticksToRequestIOminusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOminusMouseExited
        ticksToRequestIOminus.setBackground(new Color(153, 153, 153));    
    }//GEN-LAST:event_ticksToRequestIOminusMouseExited

    private void ticksToSatisfyIOplusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOplusMouseEntered
        ticksToSatisfyIOplus.setBackground(new Color(204, 204, 204));    
    }//GEN-LAST:event_ticksToSatisfyIOplusMouseEntered

    private void ticksToSatisfyIOplusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOplusMouseExited
        ticksToSatisfyIOplus.setBackground(new Color(153, 153, 153));    
    }//GEN-LAST:event_ticksToSatisfyIOplusMouseExited

    private void ticksToSatisfyIOminusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOminusMouseEntered
        ticksToSatisfyIOminus.setBackground(new Color(204, 204, 204));  
    }//GEN-LAST:event_ticksToSatisfyIOminusMouseEntered

    private void ticksToSatisfyIOminusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOminusMouseExited
        ticksToSatisfyIOminus.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_ticksToSatisfyIOminusMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel CreateProcessLabel;
    private javax.swing.JRadioButton IOBoundRButton;
    private javax.swing.JLabel IORequestLabel;
    private javax.swing.JLabel IOSatisfyLabel;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JRadioButton cpuBoundRButton;
    private javax.swing.JLabel createdMessage;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField numInstructionsInput;
    private javax.swing.JLabel ticksToExceptionLabel;
    private javax.swing.JPanel ticksToRequestIOminus;
    private javax.swing.JPanel ticksToRequestIOplus;
    private javax.swing.JPanel ticksToSatisfyIOminus;
    private javax.swing.JPanel ticksToSatisfyIOplus;
    private javax.swing.JLabel ticksToSuccesLabel;
    // End of variables declaration//GEN-END:variables
}
