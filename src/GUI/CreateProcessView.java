/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Color;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Juan
 */
public class CreateProcessView extends javax.swing.JPanel {
public static int NumInstructions =0;
    /**
     * Creates new form CreateProcessView
     */
    public CreateProcessView() {
        initComponents();
        buttonGroup.add(cpuBoundRButton);
        buttonGroup.add(IOBoundRButton);
        cpuBoundRButton.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        CreateProcessLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        numInstructionsInput = new javax.swing.JTextField();
        cpuBoundRButton = new javax.swing.JRadioButton();
        IOBoundRButton = new javax.swing.JRadioButton();
        IOSatisfyLabel = new javax.swing.JLabel();
        IORequestLabel = new javax.swing.JLabel();
        CreateButton = new javax.swing.JButton();
        ticksToRequestIOminus = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ticksToRequestIOplus = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ticksToRequestIOLabel = new javax.swing.JLabel();
        ticksToSatisfyIOLabel = new javax.swing.JLabel();
        ticksToSatisfyIOplus = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        ticksToSatisfyIOminus = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(239, 239, 239));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CreateProcessLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        CreateProcessLabel.setText("Crear Proceso");
        jPanel1.add(CreateProcessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        nameInput.setBackground(new java.awt.Color(239, 239, 239));
        nameInput.setForeground(new java.awt.Color(102, 102, 102));
        nameInput.setText("Nombre");
        nameInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        nameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameInputFocusLost(evt);
            }
        });
        jPanel1.add(nameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 200, -1));

        numInstructionsInput.setBackground(new java.awt.Color(239, 239, 239));
        numInstructionsInput.setForeground(new java.awt.Color(102, 102, 102));
        numInstructionsInput.setText("Cantidad de instrucciones");
        numInstructionsInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        numInstructionsInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numInstructionsInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numInstructionsInputFocusLost(evt);
            }
        });
        jPanel1.add(numInstructionsInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 200, -1));

        cpuBoundRButton.setText("CPU Bound");
        cpuBoundRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpuBoundRButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cpuBoundRButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, -1, -1));

        IOBoundRButton.setText("I/O Bound");
        IOBoundRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IOBoundRButtonActionPerformed(evt);
            }
        });
        jPanel1.add(IOBoundRButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, -1, -1));

        IOSatisfyLabel.setForeground(new java.awt.Color(153, 153, 153));
        IOSatisfyLabel.setText("Numero de ciclos para satisfacer operacion de I/O:");
        jPanel1.add(IOSatisfyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, -1, 20));

        IORequestLabel.setForeground(new java.awt.Color(153, 153, 153));
        IORequestLabel.setText("Numero de ciclos para generar solicitud de I/O:");
        jPanel1.add(IORequestLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 250, 20));

        CreateButton.setText("Crear!");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CreateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, -1, -1));

        ticksToRequestIOminus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToRequestIOminus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToRequestIOminusMouseClicked(evt);
            }
        });
        ticksToRequestIOminus.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("-");
        ticksToRequestIOminus.add(jLabel5, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToRequestIOminus, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 20, 20));

        ticksToRequestIOplus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToRequestIOplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToRequestIOplusMouseClicked(evt);
            }
        });
        ticksToRequestIOplus.setLayout(new java.awt.GridBagLayout());

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("+");
        ticksToRequestIOplus.add(jLabel4, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToRequestIOplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 20, 20));

        ticksToRequestIOLabel.setText("1");
        jPanel1.add(ticksToRequestIOLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 20, 20));

        ticksToSatisfyIOLabel.setText("1");
        jPanel1.add(ticksToSatisfyIOLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 20, -1));

        ticksToSatisfyIOplus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToSatisfyIOplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOplusMouseClicked(evt);
            }
        });
        ticksToSatisfyIOplus.setLayout(new java.awt.GridBagLayout());

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("+");
        ticksToSatisfyIOplus.add(jLabel7, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToSatisfyIOplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 20, 20));

        ticksToSatisfyIOminus.setBackground(new java.awt.Color(153, 153, 153));
        ticksToSatisfyIOminus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticksToSatisfyIOminusMouseClicked(evt);
            }
        });
        ticksToSatisfyIOminus.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("-");
        ticksToSatisfyIOminus.add(jLabel6, new java.awt.GridBagConstraints());

        jPanel1.add(ticksToSatisfyIOminus, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 20, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void IOBoundRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IOBoundRButtonActionPerformed
        if(IOBoundRButton.isSelected()){
            IORequestLabel.setForeground(Color.black);            
            IOSatisfyLabel.setForeground(Color.black);            
        }
    }//GEN-LAST:event_IOBoundRButtonActionPerformed

    private void cpuBoundRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpuBoundRButtonActionPerformed
        if(cpuBoundRButton.isSelected()){
            IORequestLabel.setForeground(new Color(153, 153, 153));            
            IOSatisfyLabel.setForeground(new Color(153, 153, 153));            
        }
    }//GEN-LAST:event_cpuBoundRButtonActionPerformed

    private void nameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameInputFocusGained
        if(nameInput.getText().equals("Nombre")){
            nameInput.setText("");
            nameInput.setForeground(Color.black);            
        }
    }//GEN-LAST:event_nameInputFocusGained

    private void nameInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameInputFocusLost
        if(nameInput.getText().isBlank()){            
            nameInput.setText("Nombre");
            nameInput.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_nameInputFocusLost

    private void numInstructionsInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numInstructionsInputFocusGained
        if(numInstructionsInput.getText().equals("Cantidad de instrucciones")){
            numInstructionsInput.setText("");
            numInstructionsInput.setForeground(Color.black);            
        }
    }//GEN-LAST:event_numInstructionsInputFocusGained

    private void numInstructionsInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numInstructionsInputFocusLost
        if(numInstructionsInput.getText().isBlank()){            
            numInstructionsInput.setText("Cantidad de instrucciones");
            numInstructionsInput.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_numInstructionsInputFocusLost

    private void ticksToRequestIOplusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOplusMouseClicked
        if((ticksToRequestIOLabel.getText().length() + 1) < 4){
            ticksToRequestIOLabel.setText(Integer.toString(Integer.parseInt(ticksToRequestIOLabel.getText()) + 1));
        }
    }//GEN-LAST:event_ticksToRequestIOplusMouseClicked

    private void ticksToRequestIOminusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToRequestIOminusMouseClicked
        if(Integer.parseInt(ticksToRequestIOLabel.getText()) > 1){
            ticksToRequestIOLabel.setText(Integer.toString(Integer.parseInt(ticksToRequestIOLabel.getText()) - 1));
        }
    }//GEN-LAST:event_ticksToRequestIOminusMouseClicked

    private void ticksToSatisfyIOminusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOminusMouseClicked
        if(Integer.parseInt(ticksToSatisfyIOLabel.getText()) > 1){
            ticksToSatisfyIOLabel.setText(Integer.toString(Integer.parseInt(ticksToSatisfyIOLabel.getText()) - 1));
        }
    }//GEN-LAST:event_ticksToSatisfyIOminusMouseClicked

    private void ticksToSatisfyIOplusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticksToSatisfyIOplusMouseClicked
        if((ticksToSatisfyIOLabel.getText().length() + 1) < 4){
            ticksToSatisfyIOLabel.setText(Integer.toString(Integer.parseInt(ticksToSatisfyIOLabel.getText()) + 1));
        }
    }//GEN-LAST:event_ticksToSatisfyIOplusMouseClicked
    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        // TODO add your handling code here:
        NumInstructions = Integer.parseInt(numInstructionsInput.getText()); //Se puede cambiar es para probar lo de generar una nueva tarea
    }//GEN-LAST:event_CreateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel CreateProcessLabel;
    private javax.swing.JRadioButton IOBoundRButton;
    private javax.swing.JLabel IORequestLabel;
    private javax.swing.JLabel IOSatisfyLabel;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JRadioButton cpuBoundRButton;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField numInstructionsInput;
    private javax.swing.JLabel ticksToRequestIOLabel;
    private javax.swing.JPanel ticksToRequestIOminus;
    private javax.swing.JPanel ticksToRequestIOplus;
    private javax.swing.JLabel ticksToSatisfyIOLabel;
    private javax.swing.JPanel ticksToSatisfyIOminus;
    private javax.swing.JPanel ticksToSatisfyIOplus;
    // End of variables declaration//GEN-END:variables
}
