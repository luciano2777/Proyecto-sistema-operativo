/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Classes.CPU;
import Classes.Simulator;
import DataStructures.Queue;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 *
 * @author Juan
 */
public class ejemplo extends javax.swing.JFrame {
    //Atributos
    private final Simulator sim = new Simulator(2, 2000, 1);    
    private Queue queue1;
    private Queue queue2;
    
    public ejemplo(Queue queue1, Queue queue2) {
        initComponents();
        this.queue1 = queue1;
        this.queue2 = queue2;      
        
        this.setVisible(true);
    }

    public JTextArea getColaListos() {
        return colaListos;
    }

    public void setColaListos(JTextArea colaListos) {
        this.colaListos = colaListos;
    }

    public JTextArea getColaBloqueados() {
        return colaBloqueados;
    }

    public void setColaBloqueados(JTextArea colaBloqueados) {
        this.colaBloqueados = colaBloqueados;
    }


    
    
    
    public ejemplo(int cpuEnabled, int interval){
        initComponents();         
        this.sim.createProcessIObound("P0", 5, 1, 3, 3);
        this.sim.createProcessIObound("P1", 5, 2, 3, 3);
        this.sim.createProcessCPUbound("P2", 5, 3);
        this.sim.createProcessCPUbound("P3", 5, 4);
        this.sim.createProcessCPUbound("P4", 5, 5);
        this.sim.createProcessCPUbound("P5", 5, 6);
        this.setVisible(true);
    }
    


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        intervalInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        resumeButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        endButton = new javax.swing.JButton();
        changeIntervalInput = new javax.swing.JButton();
        startSimulationButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        CPU1 = new javax.swing.JLabel();
        CPU2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        colaBloqueados = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        colaListos = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Cambiar velocidad (ms)");

        resumeButton.setText("Renaudar");
        resumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeButtonActionPerformed(evt);
            }
        });

        pauseButton.setText("Pausar");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        endButton.setText("Terminar");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endButtonActionPerformed(evt);
            }
        });

        changeIntervalInput.setText("Cambiar");
        changeIntervalInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeIntervalInputActionPerformed(evt);
            }
        });

        startSimulationButton.setText("Iniciar Simulacion");
        startSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSimulationButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CPU1.setText("CPU1: ");
        jPanel1.add(CPU1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        CPU2.setText("CPU2: ");
        jPanel1.add(CPU2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel3.setText("Cola listos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        colaBloqueados.setColumns(20);
        colaBloqueados.setRows(5);
        jScrollPane1.setViewportView(colaBloqueados);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 130, 200));

        colaListos.setColumns(20);
        colaListos.setRows(5);
        jScrollPane2.setViewportView(colaListos);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 130, 200));

        jLabel4.setText("Cola bloqueados");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(intervalInput)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(resumeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pauseButton)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(endButton))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(changeIntervalInput))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(startSimulationButton)))
                .addGap(84, 84, 84)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intervalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeIntervalInput))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resumeButton)
                    .addComponent(pauseButton)
                    .addComponent(endButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startSimulationButton)
                .addGap(33, 33, 33))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeIntervalInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeIntervalInputActionPerformed
        int interval  = Integer.parseInt(intervalInput.getText());
        this.sim.changeInterval(interval);        
    }//GEN-LAST:event_changeIntervalInputActionPerformed

    private void resumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeButtonActionPerformed
        this.sim.resumeSimulation();
    }//GEN-LAST:event_resumeButtonActionPerformed

    private void startSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSimulationButtonActionPerformed
        this.sim.startSimulation();
        
        JLabel[] array = new JLabel[2];
        array[0] = CPU1;
        array[1] = CPU2;
        
        for (int i = 0; i < 2; i++) {
            switch (this.sim.getCPUarray()[i].getCpuStatus()) {
                case CPU.RUN_OS -> array[i].setText("CPU1: SO");
                case CPU.RUN_PROCESS -> {
                    if(this.sim.getCPUarray()[0].getCurrentProcess() != null){
                        array[i].setText("CPU1: " + this.sim.getCPUarray()[0].getCurrentProcess().getName());                        
                    }
                }
                case CPU.BLOCK_PROCESS -> array[i].setText("CPU1: bloqueando proceso");
                default -> {
                }
            }
            
        }
        
        
        
        
    }//GEN-LAST:event_startSimulationButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        this.sim.stopSimulation();
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endButtonActionPerformed
        this.sim.finishSimulation();
    }//GEN-LAST:event_endButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CPU1;
    private javax.swing.JLabel CPU2;
    private javax.swing.JButton changeIntervalInput;
    private javax.swing.JTextArea colaBloqueados;
    private javax.swing.JTextArea colaListos;
    private javax.swing.JButton endButton;
    private javax.swing.JTextField intervalInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton resumeButton;
    private javax.swing.JButton startSimulationButton;
    // End of variables declaration//GEN-END:variables
}
